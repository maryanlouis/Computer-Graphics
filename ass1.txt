
#include "stdafx.h"
#include <GL/glut.h>
#include <GL/GL.h>

using namespace System;

void init(void)
{
	glClearColor(1.0, 1.0, 1.0, 0.0); //specifies clearvalues for the color buffers(R, G, B, Alpha)
	glMatrixMode(GL_PROJECTION); // sets the current matrix mode
	gluOrtho2D(0.0, 200.0, 0.0, 150.0); //2D orthographic projection matrix(left, right, bottom, top)
}

void pentagon(void)
{
	glBegin(GL_POLYGON); // Drawing Using polygon
	glColor3f(1.0f, 0.0f, 0.0f); // set color to red
	glVertex2i(50, 150); // top
	glColor3f(0.0f, 1.0f, 0.0f); // set color to green
	glVertex2i(30, 140); // bottom Left
	glVertex2i(37,115);
	glColor3f(0.0f, 0.0f, 1.0f); // set color to blue
	glVertex2i(63, 115); // bottom right
	glVertex2i(70,140);
	glEnd(); // finished drawing the pentagon
	glFlush();
}

void hexagon(void) {
	glBegin(GL_POLYGON); // Drawing Using polygon
	glColor3f(1.0f, 0.0f, 0.0f); // set color to red
	glVertex2i(87, 150); // top
	glColor3f(0.0f, 1.0f, 0.0f); // set color to green
	glVertex2i(80, 132.5); // bottom Left
	glVertex2i(87, 115);
	glColor3f(0.0f, 0.0f, 1.0f); // set color to blue
	glVertex2i(113, 115); // bottom right
	glVertex2i(120, 132.5);
	glVertex2i(113, 150);
	glEnd(); // finished drawing the hexagon
	glFlush();
}

void heptagon(void) {
	glBegin(GL_POLYGON); // Drawing Using polygon
	glColor3f(1.0f, 0.0f, 0.0f); // set color to red
	glVertex2i(160, 150); // top
	glVertex2i(145, 145); // bottom Left
	glColor3f(0.0f, 1.0f, 0.0f); // set color to green
	glVertex2i(140, 130);
	glVertex2i(147.5, 115); // bottom right
	glColor3f(0.0f, 0.0f, 1.0f); // set color to blue
	glVertex2i(172.5, 115);
	glVertex2i(180, 130);
	glVertex2i(175,145);
	glEnd(); // finished drawing the hexagon
	glFlush();
}

void octagon(void) {
	glBegin(GL_POLYGON); // Drawing Using polygon
	glColor3f(1.0f, 0.0f, 0.0f); // set color to red
	glVertex2i(40, 105); // top
	glVertex2i(30, 95); // bottom Left
	glVertex2i(30, 80);
	glColor3f(0.0f, 1.0f, 0.0f); // set color to green
	glVertex2i(40, 70); // bottom right
	glVertex2i(55, 70);
	glVertex2i(65, 80);
	glColor3f(0.0f, 0.0f, 1.0f); // set color to blue
	glVertex2i(65, 95);
	glVertex2i(55,105);
	glEnd(); // finished drawing the hexagon
	glFlush();
}

void nonagon(void) {
	glBegin(GL_POLYGON); // Drawing Using polygon
	glColor3f(1.0f, 0.0f, 0.0f); // set color to red
	glVertex2i(101, 105); // top
	glVertex2i(81, 100); // bottom Left
	glVertex2i(71, 80);
	glColor3f(0.0f, 1.0f, 0.0f); // set color to green
	glVertex2i(76, 60); // bottom right
	glVertex2i(91, 50);
	glVertex2i(111, 50);
	glColor3f(0.0f, 0.0f, 1.0f); // set color to blue
	glVertex2i(126, 60);
	glVertex2i(131, 80);
	glVertex2i(121,100);
	glEnd(); // finished drawing the hexagon
	glFlush();
}

void dectagon(void) {
	glBegin(GL_POLYGON); // Drawing Using polygon
	glColor3f(1.0f, 0.0f, 0.0f); // set color to red
	glVertex2i(152.5, 105); // top
	glVertex2i(140, 95); // bottom Left
	glVertex2i(135, 82.5);
	glColor3f(0.0f, 1.0f, 0.0f); // set color to green
	glVertex2i(140, 70); // bottom right
	glVertex2i(152.5, 60);
	glVertex2i(172.5, 60);
	glColor3f(0.0f, 0.0f, 1.0f); // set color to blue
	glVertex2i(185, 70);
	glVertex2i(190, 82.5);
	glVertex2i(185,95);
	glVertex2i(172.5,105);
	glEnd(); // finished drawing the hexagon
	glFlush();
}
void polygon(void) {
	glClear(GL_COLOR_BUFFER_BIT); // apply clear color to color buffer
	pentagon();
	hexagon();
	heptagon();
	octagon();
	nonagon();
	dectagon();
}
int main(int argc, char** argv)
{
	glutInit(&argc, argv);
	glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB); //sets the initial display mode
	glutInitWindowPosition(50, 100); //sets the initial window position
	glutInitWindowSize(1024, 764); //sets the initial window size
	glutCreateWindow("Polygon"); // creates the window with name line
	init();
	glutDisplayFunc(polygon); //sets the display callback for the current window.
	glutMainLoop(); // enters the GLUT event processing loop
	return 0;
}
